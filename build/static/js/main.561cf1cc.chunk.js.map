{"version":3,"sources":["services/personService.js","App.js","index.js"],"names":["baseUrl","Notification","message","isErrorMessage","className","Filter","searchTerm","handleChangeSearchTerm","onSubmit","event","preventDefault","value","onChange","Person","person","handleDelete","name","number","onClick","Persons","persons","filteredPersons","filter","toLowerCase","includes","trim","map","key","PersonForm","handleSubmit","handleChangeSetName","handleChangeSetNumber","type","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setSearchTerm","isError","notification","setNotification","useEffect","axios","get","then","response","data","createNotification","setTimeout","createNewPerson","trimName","trimNumber","newObject","post","clearForm","updatePerson","existingPerson","window","confirm","put","id","catch","error","alreadyExists","find","target","length","deletePerson","personId","delete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.561cf1cc.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = newObject => {\r\n  const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = personId => {\r\n  const request = axios.delete(`${baseUrl}/${personId}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n} from './services/personService'\r\n\r\nconst Notification = ({ message, isErrorMessage }) => {\r\n  if (!message) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <h4 className={isErrorMessage ? 'notification error' : 'notification success'}>\r\n      {message}\r\n    </h4>\r\n  )\r\n}\r\n\r\nconst Filter = ({ searchTerm, handleChangeSearchTerm }) => (\r\n  <form onSubmit={event => event.preventDefault()}>\r\n    <div>\r\n      Filter shown with\r\n      <input\r\n        value={searchTerm}\r\n        onChange={handleChangeSearchTerm}\r\n      />\r\n    </div>\r\n  </form>\r\n)\r\n\r\nconst Person = ({ person, handleDelete }) => (\r\n  <div>\r\n    {`${person.name} ${person.number}`}\r\n    <button\r\n      onClick={() => handleDelete(person)}\r\n    >\r\n      {'delete'}\r\n    </button>\r\n  </div>\r\n)\r\n\r\nconst Persons = ({ persons, searchTerm, handleDelete }) => {\r\n  const filteredPersons = persons.filter(person =>\r\n    person\r\n    .name\r\n    .toLowerCase()\r\n    .includes(searchTerm.trim().toLowerCase())\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {filteredPersons.map(person =>\r\n        <Person\r\n          key={person.name}\r\n          person={person}\r\n          handleDelete={handleDelete}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PersonForm = ({\r\n  name,\r\n  number,\r\n  handleSubmit,\r\n  handleChangeSetName,\r\n  handleChangeSetNumber,\r\n}) => (\r\n  <form onSubmit={handleSubmit}>\r\n    <div>\r\n      name:\r\n      <input\r\n        value={name}\r\n        onChange={handleChangeSetName}\r\n      />\r\n    </div>\r\n    <div>\r\n      number:\r\n      <input\r\n        value={number}\r\n        onChange={handleChangeSetNumber}\r\n      />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n)\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ searchTerm, setSearchTerm ] = useState('')\r\n  const [ notification, setNotification ] = useState({\r\n    message: null,\r\n    isError: false,\r\n  })\r\n\r\n  useEffect(() => {\r\n    getAll()\r\n      .then(data => {\r\n        setPersons(data)\r\n      })\r\n  }, [])\r\n\r\n  const createNotification = (message, isError) => {\r\n    setNotification({\r\n      message,\r\n      isError,\r\n    })\r\n\r\n    setTimeout(() => {\r\n      setNotification({\r\n        message: null,\r\n        isError: false,\r\n      })\r\n    }, 5000)\r\n  }\r\n\r\n  const createNewPerson = (trimName, trimNumber) => {\r\n    create({\r\n      name: trimName,\r\n      number: trimNumber,\r\n    })\r\n    .then(data => {\r\n      setPersons([\r\n        ...persons,\r\n        data,\r\n      ])\r\n\r\n      createNotification(`Added ${data.name}`)\r\n    })\r\n\r\n    clearForm()\r\n  }\r\n\r\n  const updatePerson = (trimName, trimNumber, existingPerson) => {\r\n    if(window.confirm(`${trimName} is already added to phonebook, replace the old number with a new one?`)) {\r\n      update({\r\n        ...existingPerson,\r\n        number: trimNumber\r\n      })\r\n      .then(data => {\r\n        setPersons(\r\n          persons.map(person => {\r\n            if (person.id === data.id) {\r\n              return data\r\n            }\r\n            return person\r\n          })\r\n        )\r\n      })\r\n      .catch(error => {\r\n        createNotification(\r\n          `Information of ${existingPerson.name} has already been removed from server`,\r\n          true\r\n        )\r\n\r\n        setPersons(\r\n          persons.filter(person => person.id !== existingPerson.id)\r\n        )\r\n      })\r\n\r\n      clearForm()\r\n    }\r\n  }\r\n\r\n  const clearForm = () => {\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    const trimName = newName.trim()\r\n    const trimNumber = newNumber.trim()\r\n    const existingPerson = alreadyExists(trimName)\r\n\r\n    // check if the name and the number are valid \r\n    if (trimName < 1 || trimNumber.length < 1) {\r\n      createNotification(`Please input valid name and phone number`, true)\r\n    }\r\n\r\n    // Create a new person in the database\r\n    // if the person doesnot exist already\r\n    if (!existingPerson && trimNumber.length) {\r\n      createNewPerson(trimName, trimNumber)\r\n    }\r\n\r\n    // Update the person's phone number in the database\r\n    // if the person exists already\r\n    if (existingPerson && trimNumber.length){\r\n      updatePerson(trimName, trimNumber, existingPerson)\r\n    }\r\n  }\r\n\r\n  const handleDelete = deletePerson => {\r\n    if(window.confirm(`Delete ${deletePerson.name}`)) {\r\n      remove(deletePerson.id)\r\n        .then(data => {\r\n          createNotification(\r\n            `Deleted ${deletePerson.name} from the server`,\r\n            false\r\n          )\r\n          setPersons(persons.filter(person => person.id !== deletePerson.id))\r\n        })\r\n        .catch(error => {\r\n          createNotification(\r\n            `Information of ${deletePerson.name} has already been removed from server`,\r\n            true\r\n          )\r\n          setPersons(persons.filter(person => person.id !== deletePerson.id))\r\n        })\r\n    }\r\n  }\r\n\r\n  const alreadyExists = name => {\r\n    const person = persons.find(person => person.name === name)\r\n    return person\r\n  }\r\n\r\n  const handleChangeSearchTerm = event => {\r\n    setSearchTerm(event.target.value)\r\n  }\r\n\r\n  const handleChangeSetName = event => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleChangeSetNumber = event => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification\r\n        message={notification.message}\r\n        isErrorMessage={notification.isError}\r\n      />\r\n      <Filter searchTerm={searchTerm} handleChangeSearchTerm={handleChangeSearchTerm} />\r\n  \r\n      <h3>Add a new</h3>\r\n      <PersonForm\r\n        name={newName}\r\n        number={newNumber}\r\n        handleSubmit={handleSubmit}\r\n        handleChangeSetName={handleChangeSetName}\r\n        handleChangeSetNumber={handleChangeSetNumber}\r\n      />\r\n\r\n      <h3>Numbers</h3>\r\n      <Persons\r\n        persons={persons}\r\n        searchTerm={searchTerm}\r\n        handleDelete={handleDelete}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}